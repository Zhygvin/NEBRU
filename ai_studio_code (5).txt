# ... (rest of the YAML above 'steps') ...

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt # Ensure this file is updated for all script dependencies

      - name: Install Pandoc (for PDF/EPUB generation)
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Decode GCP Service Account Key
        # This creates a file `service_account.json` that Python scripts can read
        run: echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > service_account.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service_account.json

      - name: Build site & Generate all assets (eBook, PDF, Poster, QR codes)
        run: python scripts/build_all.py
        # This script will read from content/ and output to artifacts/

      - name: Run Compliance & Ethics Checks
        run: python scripts/compliance_check.py
        # This script will check for ethical guidelines and compliance before proceeding

      - name: Upload Assets to GCP StorageLink
        run: python scripts/upload_to_storage.py
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service_account.json
        # This script will read from artifacts/ and upload to GCP_BUCKET_NAME

      - name: Post to Meta (Facebook/Instagram)
        run: python scripts/post_to_meta.py
        # This script will read marketing content and use META_ACCESS_TOKEN

      - name: Post to LinkedIn
        run: python scripts/post_to_linkedin.py
        # This script will read marketing content and use LINKEDIN_ACCESS_TOKEN

      - name: Upload to YouTube
        run: python scripts/upload_to_youtube.py
        # This script will handle YouTube video uploads using YOUTUBE_CLIENT_ID/SECRET

      - name: Send Donor/Institution Emails
        run: python scripts/send_email_campaign.py
        # This script will send emails via SendGrid/SMTP_HOST